# SPDX-FileCopyrightText: 2020 Splunk Inc.
#
# SPDX-License-Identifier: Apache-2.0

version: 2.1

orbs:
  python: circleci/python@0.2.1

jobs:
  build:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - restore_cache:
          keys:
            - poetry-cache-{{ checksum "poetry.lock" }}
      - run:
          name: Install Tools
          command: |
            curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python
      - run:
          name: Build
          command: |
            source $HOME/.poetry/env
            poetry install
            poetry run poetry-dynamic-versioning
            poetry build
      - save_cache:
          key: poetry-cache-{{ checksum "poetry.lock" }}
          paths:
            - ~/.cache/pypoetry
      - store_artifacts:
          path: dist
      - store_artifacts:
          path: output
      - persist_to_workspace:
          # Must be an absolute path, or relative path from working_directory. This is a directory on the container which is
          # taken to be the root directory of the workspace.
          root: .
          # Must be relative path from root
          paths:
            - dist
            - output
  release:
    docker:
      - image: circleci/node:12
    steps:
      - checkout
      - run: npx semantic-release

  publish-pypi:
    docker:
      - image: circleci/python:3.7
    steps:
      - setup_remote_docker:
          docker_layer_caching: true
      - checkout
      - restore_cache:
          keys:
            - poetry-cache-{{ checksum "poetry.lock" }}
      - run:
          name: Install Tools
          command: |
            curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python
      - run:
          name: Build
          command: |
            source $HOME/.poetry/env
            poetry install
            poetry run poetry-dynamic-versioning
            poetry publish --build -u ${PYPI_USERNAME} -p ${PYPI_TOKEN}

workflows:
  main:
    jobs:
      - build
      - release:
          context:
            - gdi-github
          requires:
            - build

  publish:
    jobs:
      - publish-pypi:
          context:
            - gdi-pypi
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v\d*\.\d*\.\d*.*$/
